openapi: 3.0.1
info:
  title: Shop
  version: 1.0.0
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        email:
          type: string
        password:
          type: string
    Item:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        description:
          type: string
        price:
          type: integer
          format: int64
        image_link:
          type: string
      example:
        - id: 1
          name: Aavocado
          description: berry
          price: 12345          
          image_link: https://cdn-edb.arla.com/globalassets/images/ingredients/avocado.jpg
        - id: 2
          name: Aavocado
          description: berry
          price: 12345          
          image_link: https://cdn-edb.arla.com/globalassets/images/ingredients/avocado.jpg
        - id: 3
          name: Aavocado
          description: berry
          price: 12345          
          image_link: https://cdn-edb.arla.com/globalassets/images/ingredients/avocado.jpg
  securitySchemes:
    api_key:
      type: "apiKey"
      name: "api_key"
      in: "header"
paths:
  /user/login:
    post:
      operationId: loginUser
      parameters:
        - name: username
          in: query
          description: The user name for login
          required: true
          schema:
            type: string
        - name: password
          in: query
          description: The password for login
          required: true
          schema:
            type: string
      responses:
        200:
          description: succesful operation
          headers:
            X-Expires-After:
              description: date on UTC when token expires
              schema:
                type: string
          content:
            application/json:
              schema:
                type: string
        400:
          description: Invalid username/password suplied
          content: {}
  /user/logout:
    post:
      summary: Logs out current logged in user session
      operationId: logoutUser
      responses:
        200:
          description: successful logout
          content: {}
  /items:
    get:
      summary: Get items list
      operationId: getItems
      parameters:
      - in: query
        name: price_min
        description: Lower price limit
        required: false
        schema:
          type: integer
          format: int64
      - name: price_max
        in: query
        description: Upper price limit
        required: false
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: Succesful operation
          content:
            application/json:
              schema: 
                type: array
                $ref: "#components/schemas/Item"
        400:
         description: Invalid price range
    post:
      summary: Add a new item to the store
      operationId: createItem
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              $ref: '#/components/schemas/Item'
      responses:
        200:
          description:  Successfully created a new employee
        405:
          description: Invalid input
      security:
      - api_key: []
  /items/{itemId}:
    get:
      summary: Find item by ID
      operationId: getItem
      parameters:
      - in: path
        name: itemId
        description: ID of item to return
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  id: 
                    type: integer
                    format: int64
                  name:
                    type: string
                  description:
                    type: string
                  price:
                    type: integer
                    format: int64
                  image_link:
                    type: string
                example:
                  id: 1
                  name: Aavocado
                  description: berry
                  price: 12345          
                  image_link: https://cdn-edb.arla.com/globalassets/images/ingredients/avocado.jpg
        400:
          description: Invalid ID supplied
    put:
      summary: Updates a item in the store with form data
      operationId: putItem
      parameters:
      - in: path
        name: itemId
        required: true
        description: ID of item that needs to be updated
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              properties:
                name:
                  type: string
                  description: Updated name of the item
                status:
                  type: string
                  description: Updated status of the item
      responses:
        405:
          description: Invalid input
      security:
       - api-key: []
    delete:
      summary: Deletes a item
      operationId: DeleteItem
      parameters:
      - name: itemId
        in: path
        description: Item id to delete
        required: true
        schema:
          type: integer
          format: int64
      responses:
        400:
          description: Invalid ID supplied
        404:
          description: Item not found
      security:
      - api_key: []

  /items/upload_image:
    post:
      summary: upload an image
      operationId: uploadFile
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                additionalMetadata:
                  description: Additional data to pass to server
                  type: string
                file:
                  description: File to upload
                  type: string
                  format: binary
      responses:
        200:
          description: Successfully upload file
      security:
      - api_key: []